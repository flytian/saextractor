<project name="ex" default="dist" basedir=".">
  <description>
    $Id: build.xml 1179 2008-02-16 22:45:05Z labsky $
    ex build file (http://rainbow.vse.cz)
  </description>
  <!-- global properties -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="lib" location="lib"/>
  <property name="res" location="res"/>
  <property name="doc" location="doc"/>
  <property name="dist" location="dist"/>

  <property name="link" value="http://java.sun.com/j2se/1.4.1/docs/api"/>
  <property name="windowtitle" value="ex API Specification"/>
  <property name="compile.debug" value="true"/>
  
  <property name="runtime.max.memory" value="800M"/>
  <property name="runtime.start.memory" value="20M"/>
  <property name="build.compiler" value="modern"/>

  <property name="javacc.jar" location="${lib}/javacc.jar"/>
  <property name="javacc.main.class" value="org.javacc.parser.Main"/> 
  
  <echo level="info">
    This is the ANT build script for ex (http://rainbow.vse.cz).
    Type &quot;ant help&quot; to list available targets.
  </echo>
  
  <target name="help">
    <echo level="info">
      This is the ANT build script for ex (http://rainbow.vse.cz).
      Targets:
        -all (default target): compiles all ex classes and creates ${lib}/ex.jar
        
        -compile: compiles all .java files
        -res: copies resources to the ${dist} directory
        -dist: copies binaries and resources to the ${dist} directory
        -clean: cleans up previous builds' output
        -run: starts ex
        
        -doc: creates the Javadoc and Java2HTML documentation
        -docclean: deletes all built documentation
    </echo>
  </target>

  <path id="compile.classpath">
     <pathelement location="${build}"/>
     <pathelement location="lib/xercesImpl.jar"/>
     <pathelement location="lib/xml-apis.jar"/>
     <pathelement location="lib/nekohtml.jar"/> <!-- parsing legacy html pages under xerces standard API -->
     <pathelement location="lib/trove.jar"/> <!-- effective int arrays, used throughout ex -->
     <pathelement location="lib/js.jar"/> <!-- axiom evaluation -->
     <pathelement location="lib/commons-math-1.1.jar"/> <!-- normal distribution cumulative density function -->
     <pathelement location="lib/weka.jar"/> <!-- weka -->
     <!--<pathelement location="lib/SentenceSplitter.jar"/>--> <!-- used by document reader -->
     <pathelement location="../iet/dist/iet.jar"/> <!-- used by api.Ex; will be copied to ex/lib when stable -->
     <pathelement location="../util/dist/util.jar"/> <!-- logger, document downloader, console via socket, tools -->
  </path>
  <path id="run.classpath">
    <pathelement location="${lib}/ex.jar"/>
    <path refid="compile.classpath"/>
  </path>

  <target name="init">
    <tstamp/>
    <mkdir dir="${build}"/>
    <mkdir dir="${doc}"/>
    <mkdir dir="${dist}"/>
  </target>

  <target name="res">
    <copy todir="${build}/res" includeEmptyDirs="true" >
      <fileset dir="${res}" excludes="**/CVS,**/CVS/**,**/.cvsignore" />
    </copy>
  </target>

  <target name="javacc" depends="init">
    <java classname="${javacc.main.class}" fork="true">
      <classpath path="${javacc.jar}"/>
      <arg value="-OUTPUT_DIRECTORY:src/ex/reader/tokenizer/"/>
      <arg value="src/ex/reader/tokenizer/GrmTokenizer.jj"/>
    </java>
  </target>

  <target name="compile" depends="init,javacc" description="compile the source" > <!--depends="init,javacc"-->
    <!-- Compile all java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" debug="${compile.debug}"
           classpathref="compile.classpath" 
	   excludes="**/CVS,**/CVS/**,**/.cvsignore,**/etc,**/etc/**"
	   /> <!-- source="1.5" -->
  </target>

  <target name="doc" depends="compile" description="generates documentation" >
    <javadoc sourcepath="${src}"
           destdir="${doc}"
           version="true"
           use="true"
           public="true"
           windowtitle="ex API"
           packagenames="ex.*"
           excludepackagenames="ex.util.etc"
           defaultexcludes="yes"
           classpathref="compile.classpath" > <!-- source="1.5" -->
           <doctitle><![CDATA[<h1>ex API Specification</h1>]]></doctitle>
           <bottom><![CDATA[<font size="-1"><a href="mailto:labsky@vse.cz">Submit bugs</a>.</font>]]></bottom> 
    </javadoc>
  </target>

  <target name="dist" depends="compile,res" description="generate distribution jar" >
    <!-- Put everything in ${build} into the ex.jar file -->
    <jar jarfile="${dist}/ex.jar" basedir="${build}" />
  </target>

  <target name="clean" description="clean up" >
    <delete dir="${build}"/>
    <delete dir="${dist}"/> 
  </target>

  <target name="all" depends="dist,doc">
  </target>
  
  <target name="run-model" depends="run-pre" >
    <java classname="ex.model.ModelReader" 
          classpathref="run.classpath"
          fork="true"
          spawn="false"
          dir="." 
          logError="true"
          maxmemory="${runtime.max.memory}">
       <sysproperty key="ex.home" value="${basedir}" />
       <jvmarg value="-Xms${runtime.start.memory}" />
       <arg value="data/mon/mon.xml" />
     </java>
  </target>

  <target name="run-pre">
    <property name="karel" refid="run.classpath" />
    <echo>
      Starting ex using JVM at ${java.home}
      Initial memory ${runtime.start.memory}, Maximum ${runtime.max.memory}
      CLASSPATH=${karel}
    </echo>
  </target>

</project>
